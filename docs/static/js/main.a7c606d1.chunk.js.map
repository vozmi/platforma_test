{"version":3,"sources":["features/ReportView/index.module.css","features/ReportView/selectors.ts","features/ReportView/reducer.ts","features/ReportView/components/ReportEditor/atoms/ColumnEdit.tsx","features/ReportView/components/ReportEditor/atoms/ColumnAdd.tsx","features/ReportView/components/ReportEditor/index.tsx","features/ReportView/index.tsx","data.js","pages/home/Home.tsx","App.tsx","store.ts","index.tsx"],"names":["module","exports","columnsSelector","state","reportView","columns","activeColumnsSelector","createSelector","filter","column","type","disabledColumnsSelector","employeesSelector","employees","initialState","undefined","reportViewSlice","createSlice","name","reducers","addColumns","action","lastId","length","id","newColumns","payload","map","columnProps","i","props","push","setEmployees","changeColumnName","prevName","newName","employeesResult","employee","result","columnsResult","dataField","changeColumnType","actions","columnEdit","wrapper","display","gridTemplateColumns","alignItems","marginBottom","input","borderRadius","padding","border","icon","height","cursor","buttonClear","justifySelf","backgroundColor","closeBtn","justifyContent","width","submitBtn","ColumnInfo","onDelete","onEdit","style","onMouseDown","src","alt","ColumnEdit","dispatch","useDispatch","inputRef","useRef","useState","isEdit","setIsEdit","inputValue","setInputValue","onNameEdit","onNameEditCancel","useEffect","value","ref","onBlur","onChange","current","onKeyDown","e","keyCode","lineHeight","setTimeout","focus","columnAdd","addBtn","marginTop","textAlign","fontWeight","fontSize","margin","ColumnAdd","isOpen","setIsOpen","disabledColumns","useSelector","onClick","onAdd","color","ReportEditor","activeColumns","ReportView","initEmployees","employeeExampleKeys","Object","keys","initColumns","className","s","keyExpr","dataSource","overflowX","allowColumnReordering","allowColumnResizing","columnAutoWidth","showBorders","enabled","caption","fixed","calculateCellValue","FirstName","LastName","ID","Position","BirthDate","HireDate","Title","Address","City","State","Zipcode","Email","Skype","HomePhone","DepartmentID","MobilePhone","Home","data","App","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7c606d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ReportView_wrapper__GEDpC\"};","import { createSelector } from 'reselect';\nimport { RootState } from '../../store';\n\nexport const columnsSelector = (state: RootState) => state.reportView.columns;\nexport const activeColumnsSelector = createSelector(\n  columnsSelector,\n  (columns) => columns?.filter((column) => column.type === 'active'),\n);\nexport const disabledColumnsSelector = createSelector(\n  columnsSelector,\n  (columns) => columns?.filter((column) => column.type === 'disable'),\n);\nexport const employeesSelector = (state: RootState) => state.reportView.employees;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { IColumnProps } from 'devextreme-react/data-grid';\nimport { Employee, EmployeeName } from './types';\n\nexport interface Column {\n  id: number\n  type: 'active' | 'disable'\n  props: IColumnProps\n}\n\ninterface IS {\n  columns: Array<Column> | undefined\n  employees: Array<Employee> | undefined\n}\n\nconst initialState: IS = {\n  columns: undefined,\n  employees: undefined,\n};\n\nconst reportViewSlice = createSlice({\n  name: 'reportView',\n  initialState,\n  reducers: {\n    addColumns(state, action: PayloadAction<{columns: Array<IColumnProps>, type: 'active' | 'disable'}>) {\n      const lastId = state.columns ? state.columns[state.columns.length - 1].id : 0;\n      const newColumns: Array<Column> = action.payload.columns.map((columnProps, i) => {\n        const column: Column = {\n          id: lastId + i,\n          type: action.payload.type,\n          props: columnProps,\n        };\n        return column;\n      });\n      if (state.columns) state.columns.push(...newColumns);\n      else state.columns = newColumns;\n    },\n    setEmployees(state, action: PayloadAction<Array<Employee>>) {\n      state.employees = action.payload;\n    },\n    changeColumnName(state, action: PayloadAction<{prevName: EmployeeName, newName: string}>) {\n      const { prevName, newName } = action.payload;\n      if (state.employees && state.columns && (prevName !== newName)) {\n        const employeesResult = state.employees.map((employee) => {\n          const result = {\n            ...employee,\n            [newName]: employee[prevName],\n          };\n          delete result[prevName];\n          return result;\n        });\n\n        const columnsResult = state.columns.map((column) => {\n          if (column.props?.dataField === prevName) {\n            return {\n              ...column,\n              props: {\n                ...column.props,\n                dataField: newName,\n              },\n            };\n          }\n          return column;\n        });\n\n        state.employees = employeesResult;\n        state.columns = columnsResult;\n      }\n    },\n    changeColumnType(state, action: PayloadAction<{ id: number, type: 'active' | 'disable'}>) {\n      state.columns = state.columns?.map((column) => {\n        if (column.id === action.payload.id) {\n          return {\n            ...column,\n            type: action.payload.type,\n          };\n        }\n        return column;\n      });\n    },\n  },\n});\n\nexport const {\n  addColumns,\n  setEmployees,\n  changeColumnName,\n  changeColumnType,\n} = reportViewSlice.actions;\n\nexport default reportViewSlice.reducer;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeColumnName, changeColumnType, Column } from '../../../reducer';\n\ntype CSSProp = React.CSSProperties;\n\nconst columnEdit = {\n  wrapper: {\n    display: 'grid',\n    gridTemplateColumns: '4fr 1fr 1fr',\n    alignItems: 'center',\n    marginBottom: '1rem',\n  } as CSSProp,\n  input: {\n    display: 'inline-block',\n    borderRadius: '5px',\n    padding: '4px',\n    border: '1px solid darkgray',\n  } as CSSProp,\n  icon: {\n    display: 'inline-block',\n    height: '1rem',\n    cursor: 'pointer',\n  } as CSSProp,\n  buttonClear: {\n    display: 'inline-block',\n    justifySelf: 'center',\n    height: '1rem',\n    cursor: 'pointer',\n    border: 0,\n    padding: 0,\n    backgroundColor: 'inherit',\n  } as CSSProp,\n  closeBtn: {\n    display: 'flex',\n    justifySelf: 'center',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '25px',\n    width: '25px',\n    padding: '4px',\n    border: '1px solid darkgray',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    backgroundColor: 'inherit',\n  } as CSSProp,\n  submitBtn: {\n    display: 'flex',\n    justifySelf: 'center',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '25px',\n    width: '25px',\n    padding: 0,\n    border: 0,\n    cursor: 'pointer',\n    backgroundColor: 'inherit',\n  } as CSSProp,\n};\n\ninterface ColumnInfoProps {\n  dataField: string,\n  onDelete: () => void,\n  onEdit: () => void\n}\n\nconst ColumnInfo: React.FC<ColumnInfoProps> = (props: ColumnInfoProps) => {\n  const { dataField, onDelete, onEdit } = props;\n  return (\n    <div style={columnEdit.wrapper}>\n      <span>{dataField}</span>\n      <button\n        style={columnEdit.buttonClear}\n        type=\"button\"\n        onMouseDown={onDelete}\n      >\n        <img\n          style={columnEdit.icon}\n          src=\"https://image.flaticon.com/icons/png/512/3096/3096687.png\"\n          alt=\"Delete\"\n        />\n      </button>\n      <button\n        style={columnEdit.buttonClear}\n        type=\"button\"\n        onMouseDown={onEdit}\n      >\n        <img\n          style={columnEdit.icon}\n          src=\"https://image.flaticon.com/icons/png/512/1827/1827933.png\"\n          alt=\"Edit\"\n        />\n      </button>\n    </div>\n  );\n};\n\nconst ColumnEdit: React.FC<Column> = (column: Column) => {\n  const { props } = column;\n  const dispatch = useDispatch();\n  // eslint-disable-next-line react/prop-types\n  const { dataField } = props;\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [isEdit, setIsEdit] = useState(false);\n  const [inputValue, setInputValue] = useState(dataField);\n\n  const onDelete = () => {\n    dispatch(changeColumnType({ id: column.id, type: 'disable' }));\n  };\n\n  const onEdit = () => {\n    setIsEdit(true);\n    setTimeout(() => {\n      inputRef.current?.focus();\n    }, 0);\n  };\n\n  const onNameEdit = (name: string) => {\n    setIsEdit(false);\n    dispatch(changeColumnName({\n      prevName: dataField,\n      newName: name,\n    }));\n  };\n\n  const onNameEditCancel = () => {\n    setIsEdit(false);\n    setInputValue(dataField);\n  };\n\n  useEffect(() => {\n    setInputValue(dataField);\n  }, [dataField]);\n\n  return (\n    <>\n      {\n        isEdit ? (\n          <div style={columnEdit.wrapper}>\n            <input\n              name=\"columnName\"\n              type=\"text\"\n              style={columnEdit.input}\n              value={inputValue}\n              ref={inputRef as React.RefObject<HTMLInputElement>}\n              onBlur={() => setIsEdit(false)}\n              onChange={() => setInputValue(inputRef.current?.value)}\n              onKeyDown={(e) => {\n                // @ts-ignore\n                if (e.keyCode === 13) {\n                  onNameEdit(inputValue);\n                }\n                // @ts-ignore\n                if (e.keyCode === 27) {\n                  onNameEditCancel();\n                }\n              }}\n            />\n            <button\n              style={columnEdit.submitBtn}\n              type=\"button\"\n              onMouseDown={() => onNameEdit(inputValue)}\n            >\n              <img\n                style={columnEdit.icon}\n                src=\"https://image.flaticon.com/icons/png/512/992/992650.png\"\n                alt=\"Submit\"\n              />\n            </button>\n            <button\n              type=\"button\"\n              style={columnEdit.closeBtn}\n              onMouseDown={onNameEditCancel}\n            >\n              <span style={{ lineHeight: '1rem' }}>x</span>\n            </button>\n          </div>\n        ) : (\n          <ColumnInfo\n            dataField={dataField}\n            onDelete={onDelete}\n            onEdit={onEdit}\n          />\n        )\n      }\n    </>\n  );\n};\n\nexport default ColumnEdit;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeColumnType, Column } from '../../../reducer';\nimport { disabledColumnsSelector } from '../../../selectors';\n\ntype CSS = React.CSSProperties\n\nconst columnAdd = {\n  addBtn: {\n    display: 'flex',\n    width: '100%',\n    marginTop: '1rem',\n    padding: '6px 12px',\n    border: '1px solid darkgray',\n    borderRadius: '5px',\n    backgroundColor: 'inherit',\n    textAlign: 'center',\n    justifyContent: 'center',\n    fontWeight: 'bold',\n    fontSize: '1.05rem',\n    cursor: 'pointer',\n  } as CSS,\n  column: {\n    display: 'flex',\n    width: '100%',\n    backgroundColor: 'inherit',\n    justifyContent: 'center',\n    margin: '0.5rem 0',\n    padding: '6px',\n    border: '1px solid darkgray',\n    borderRadius: '5px',\n    cursor: 'pointer',\n  } as CSS,\n};\n\nconst ColumnAdd: React.FC = () => {\n  const dispatch = useDispatch();\n  const [isOpen, setIsOpen] = useState(false);\n  const disabledColumns = useSelector(disabledColumnsSelector);\n\n  const onAdd = (column: Column) => {\n    dispatch(changeColumnType({\n      id: column.id,\n      type: 'active',\n    }));\n  };\n\n  return (\n    <>\n      {\n        !isOpen ? (\n          <button\n            type=\"button\"\n            style={columnAdd.addBtn}\n            onClick={() => setIsOpen(true)}\n          >\n            Add columns\n          </button>\n        ) : (\n          <>\n            <h3 style={{ marginBottom: 0 }}>Choose column to add</h3>\n            {\n              disabledColumns?.map((column) => (\n                <button\n                  type=\"button\"\n                  style={columnAdd.column}\n                  onClick={() => onAdd(column)}\n                >\n                  {column.props.dataField}\n                </button>\n              ))\n            }\n            <button\n              type=\"button\"\n              style={{\n                ...columnAdd.addBtn, border: 0, backgroundColor: 'tomato', color: '#fff',\n              }}\n              onClick={() => setIsOpen(false)}\n            >\n              Close\n            </button>\n          </>\n        )\n      }\n    </>\n  );\n};\n\nexport default ColumnAdd;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { columnsSelector } from '../../selectors';\nimport { Column } from '../../reducer';\nimport ColumnEdit from './atoms/ColumnEdit';\nimport ColumnAdd from './atoms/ColumnAdd';\n\nconst ReportEditor: React.FC = () => {\n  const columns = useSelector(columnsSelector);\n  // eslint-disable-next-line no-unused-vars\n  const disabledColumns = columns?.filter((column: Column) => column.type === 'disable');\n  const activeColumns = columns?.filter((column: Column) => column.type === 'active');\n\n  return (\n    <div>\n      {activeColumns?.map((column: Column) => (\n        <ColumnEdit {...column} />\n      ))}\n      <ColumnAdd />\n    </div>\n  );\n};\n\nexport default ReportEditor;\n","import React, { useEffect } from 'react';\nimport { DataGrid } from 'devextreme-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Column, ColumnFixing } from 'devextreme-react/data-grid';\nimport ReportEditor from './components/ReportEditor';\nimport s from './index.module.css';\nimport { activeColumnsSelector, employeesSelector } from './selectors';\nimport { Employee } from './types';\nimport { addColumns, setEmployees } from './reducer';\n\ninterface Props {\n  employees: Array<Employee>\n}\n\nconst ReportView: React.FC<Props> = (props: Props) => {\n  const dispatch = useDispatch();\n  const activeColumns = useSelector(activeColumnsSelector);\n  const employees = useSelector(employeesSelector);\n  const { employees: initEmployees } = props;\n\n  useEffect(() => {\n    if (initEmployees) {\n      const employeeExampleKeys = Object.keys(initEmployees[0]);\n      const initColumns = [\n        {\n          dataField: employeeExampleKeys[3],\n        },\n        {\n          dataField: employeeExampleKeys[4],\n        },\n        {\n          dataField: employeeExampleKeys[5],\n        },\n        {\n          dataField: employeeExampleKeys[6],\n        },\n      ];\n      dispatch(addColumns({ columns: initColumns, type: 'active' }));\n\n      const disabledColumns = [];\n      for (let i = 7; i < employeeExampleKeys.length; i += 1) {\n        disabledColumns.push({\n          dataField: employeeExampleKeys[i],\n        });\n      }\n      dispatch(addColumns({\n        columns: disabledColumns,\n        type: 'disable',\n      }));\n      dispatch(setEmployees(props.employees));\n    }\n  }, [initEmployees]);\n\n  return (\n    <div className={s.wrapper}>\n      <DataGrid\n        id=\"reportView\"\n        keyExpr=\"ID\"\n        dataSource={employees}\n        style={{ height: '440px', overflowX: 'scroll' }}\n        allowColumnReordering\n        allowColumnResizing\n        columnAutoWidth\n        showBorders\n      >\n        <ColumnFixing enabled />\n        <Column\n          caption=\"Employee\"\n          width={230}\n          fixed\n          calculateCellValue={(employee: Employee) => `${employee.FirstName} ${employee.LastName}`}\n        />\n        {activeColumns ? activeColumns.map((column) => (\n          <Column\n            key={column.id}\n            {...column.props}\n          />\n        )) : null}\n      </DataGrid>\n      <ReportEditor />\n    </div>\n  );\n};\n\nexport default ReportView;\n","const employees = [{\n  ID: 1,\n  FirstName: 'John',\n  LastName: 'Heart',\n  Position: 'CEO',\n  BirthDate: '1964/03/16',\n  HireDate: '1995/01/15',\n  Title: 'Mr.',\n  Address: '351 S Hill St.',\n  City: 'Los Angeles',\n  State: 'California',\n  Zipcode: 90013,\n  Email: 'jheart@dx-email.com',\n  Skype: 'jheartDXskype',\n  HomePhone: '(213) 555-9208',\n  DepartmentID: 6,\n  MobilePhone: '(213) 555-9392',\n}, {\n  ID: 2,\n  FirstName: 'Olivia',\n  LastName: 'Peyton',\n  Position: 'Sales Assistant',\n  BirthDate: '1981/06/03',\n  HireDate: '2012/05/14',\n  Title: 'Mrs.',\n  Address: '807 W Paseo Del Mar',\n  City: 'Los Angeles',\n  State: 'California',\n  Zipcode: 90036,\n  Email: 'oliviap@dx-email.com',\n  Skype: 'oliviapDXskype',\n  HomePhone: '(310) 555-2728',\n  DepartmentID: 5,\n  MobilePhone: '(818) 555-2387',\n}, {\n  ID: 3,\n  FirstName: 'Robert',\n  LastName: 'Reagan',\n  Position: 'CMO',\n  BirthDate: '1974/09/07',\n  HireDate: '2002/11/08',\n  Title: 'Mr.',\n  Address: '4 Westmoreland Pl.',\n  City: 'Bentonville',\n  State: 'Arkansas',\n  Zipcode: 91103,\n  Email: 'robertr@dx-email.com',\n  Skype: 'robertrDXskype',\n  HomePhone: '(818) 555-2438',\n  DepartmentID: 6,\n  MobilePhone: '(818) 555-2387',\n}, {\n  ID: 4,\n  FirstName: 'Greta',\n  LastName: 'Sims',\n  Position: 'HR Manager',\n  BirthDate: '1977/11/22',\n  HireDate: '1998/04/23',\n  Title: 'Ms.',\n  Address: '1700 S Grandview Dr.',\n  State: 'Georgia',\n  City: 'Atlanta',\n  Zipcode: 91803,\n  Email: 'gretas@dx-email.com',\n  Skype: 'gretasDXskype',\n  HomePhone: '(818) 555-0976',\n  DepartmentID: 5,\n  MobilePhone: '(818) 555-6546',\n}, {\n  ID: 5,\n  FirstName: 'Brett',\n  LastName: 'Wade',\n  Position: 'IT Manager',\n  BirthDate: '1968/12/01',\n  HireDate: '2009/03/06',\n  Title: 'Mr.',\n  Address: '1120 Old Mill Rd.',\n  State: 'Idaho',\n  City: 'Boise',\n  Zipcode: 91108,\n  Email: 'brettw@dx-email.com',\n  Skype: 'brettwDXskype',\n  HomePhone: '(626) 555-5985',\n  DepartmentID: 7,\n  MobilePhone: '(626) 555-0358',\n}, {\n  ID: 6,\n  FirstName: 'Sandra',\n  LastName: 'Johnson',\n  Position: 'Controller',\n  BirthDate: '1974/11/15',\n  HireDate: '2005/05/11',\n  Title: 'Mrs.',\n  Address: '4600 N Virginia Rd.',\n  State: 'Utah',\n  City: 'Beaver',\n  Zipcode: 90807,\n  Email: 'sandraj@dx-email.com',\n  Skype: 'sandrajDXskype',\n  HomePhone: '(562) 555-8272',\n  DepartmentID: 5,\n  MobilePhone: '(562) 555-2082',\n}, {\n  ID: 7,\n  FirstName: 'Kevin',\n  LastName: 'Carter',\n  Position: 'Shipping Manager',\n  BirthDate: '1978/01/09',\n  HireDate: '2009/08/11',\n  Title: 'Mr.',\n  Address: '424 N Main St.',\n  State: 'California',\n  City: 'San Diego',\n  Zipcode: 90012,\n  Email: 'kevinc@dx-email.com',\n  Skype: 'kevincDXskype',\n  HomePhone: '(213) 555-8038',\n  DepartmentID: 3,\n  MobilePhone: '(213) 555-2840',\n}, {\n  ID: 8,\n  FirstName: 'Cynthia',\n  LastName: 'Stanwick',\n  Position: 'HR Assistant',\n  BirthDate: '1985/06/05',\n  HireDate: '2008/03/24',\n  Title: 'Ms.',\n  Address: '2211 Bonita Dr.',\n  City: 'Little Rock',\n  State: 'Arkansas',\n  Zipcode: 90265,\n  Email: 'cindys@dx-email.com',\n  Skype: 'cindysDXskype',\n  HomePhone: '(818) 555-6808',\n  DepartmentID: 4,\n  MobilePhone: '(818) 555-6655',\n}, {\n  ID: 9,\n  FirstName: 'Kent',\n  LastName: 'Samuelson',\n  Position: 'Ombudsman',\n  BirthDate: '1972/09/11',\n  HireDate: '2009/04/22',\n  Title: 'Dr.',\n  Address: '12100 Mora Dr',\n  City: 'St. Louis',\n  State: 'Missouri',\n  Zipcode: 90272,\n  Email: 'kents@dx-email.com',\n  Skype: 'kentsDXskype',\n  HomePhone: '(562) 555-1328',\n  DepartmentID: 26,\n  MobilePhone: '(562) 555-9282',\n}, {\n  ID: 10,\n  FirstName: 'Taylor',\n  LastName: 'Riley',\n  Position: 'Network Admin',\n  BirthDate: '1982/08/14',\n  HireDate: '2012/04/14',\n  Title: 'Mr.',\n  Address: '7776 Torreyson Dr',\n  City: 'San Jose',\n  State: 'California',\n  Zipcode: 90012,\n  Email: 'taylorr@dx-email.com',\n  Skype: 'taylorrDXskype',\n  HomePhone: '(310) 555-9712',\n  DepartmentID: 5,\n  MobilePhone: '(310) 555-7276',\n}];\n\nexport default {\n  getEmployees() {\n    return employees;\n  },\n};\n","import React from 'react';\nimport ReportView from '../../features/ReportView';\nimport data from '../../data';\n\nconst Home: React.FC = () => {\n  const employees = data.getEmployees();\n  return (\n    <div>\n      <h2>Report View:</h2>\n      <ReportView employees={employees} />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './pages/home/Home';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route>\n        <Home />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport reportView from './features/ReportView/reducer';\n\nconst store = configureStore({\n  reducer: {\n    reportView,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}